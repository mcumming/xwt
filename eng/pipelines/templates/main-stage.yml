parameters:
- name: isPR
  type: boolean

- name: configuration
  type: string
  default: Debug

stages:

- stage: build
  jobs:
    - job: build
      displayName: "Build & Deploy"
      pool:
        vmImage: macos-latest
      steps:

      - checkout: self
        clean: true
        fetchDepth: 0 # Do not shallow fetch
        submodules: recursive

      - task: UseDotNet@2
        inputs:
          version: 7.0.201
          performMultiLevelLookup: true
          includePreviewVersions: true # Required for preview versions

      - pwsh: dotnet workload install macos
        displayName: 'dotnet workload install macos'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'restore'
          projects: 'Xwt.UITools.sln'
          restoreArguments: '/p:NUGET_PACKAGE_BUILD=True'
        displayName: 'dotnet restore'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: 'Xwt.UITools.sln'
          arguments: '--no-restore --configuration ${{ parameters.configuration }} /p:NUGET_PACKAGE_BUILD=True'
        displayName: 'dotnet build ${{ parameters.configuration }}'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'custom'
          projects: 'Xwt.UITools.sln'
          custom: 'pack'
          arguments: '--no-restore --no-build --include-symbols --configuration ${{ parameters.configuration }} /p:NUGET_PACKAGE_BUILD=True --output $(Build.ArtifactStagingDirectory)/nupkgs'
        displayName: 'dotnet pack ${{ parameters.configuration }}'

      - publish: $(Build.ArtifactStagingDirectory)/nupkgs
        artifact: Packages

      - task: NuGetAuthenticate@0
        displayName: 'NuGet Authenticate'

      - task: NuGetCommand@2
        displayName: 'NuGet push'
        inputs:
          command: push
          publishVstsFeed: 'devdiv/Xamarin.UITooling'
          allowPackageConflicts: true        
