parameters:
- name: isPR
  type: boolean

- name: configuration
  type: string
  default: Debug

stages:

- stage: build
  jobs:
    - job: build
      displayName: "Build & Deploy"
      strategy:
        matrix:
          'Windows':
            image: 'windows-latest'
            configuration: '${{ parameters.configuration }}'
          'macOS':
            image: 'macos-latest'
            configuration: '${{ parameters.configuration }}-macOS'

      pool:
        vmImage: $(image)

      steps:

      - checkout: self
        clean: true
        fetchDepth: 0 # Do not shallow fetch
        submodules: recursive

      - task: UseDotNet@2
        inputs:
          version: 7.0.201
          performMultiLevelLookup: true
          includePreviewVersions: true # Required for preview versions
        displayName: "‚öôÔ∏è Configure DotNet version"

      - pwsh: dotnet workload install macos 
        displayName: '‚öôÔ∏è dotnet workload install macos'

      - task: VSBuild@1
        inputs:
          solution: 'Xwt.UITools.sln'
          platform: 'Any Cpu'
          configuration: $(configuration)
          msbuildArgs: '/r /t:pack /p:IncludeSymbols=true /p:NUGET_PACKAGE_BUILD=True /p:IncludeSymbols=true /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)/nupkgs'
        displayName: 'üì¶ Pack $(configuration)'

      - publish: $(Build.ArtifactStagingDirectory)/nupkgs
        artifact: Packages
        displayName: "üì¢ collect package artifact"

      - task: NuGetAuthenticate@0
        displayName: 'üîè NuGet Authenticate'

      - task: NuGetCommand@2
        displayName: 'üì¶ NuGet push'
        inputs:
          command: push
          publishVstsFeed: 'devdiv/Xamarin.UITooling'
          allowPackageConflicts: true        
